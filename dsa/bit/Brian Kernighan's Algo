Brian Kernighanâ€™s algorithm is a method for counting the number of 1s (set bits) in the binary representation of an integer. It's efficient and works by repeatedly clearing the lowest set bit in the number.

How it Works:
Initialization: Start with a given integer n.

Algorithm: Perform the following steps until n becomes zero:

Clear the Lowest Set Bit: Compute n = n & (n - 1). This operation turns off the lowest set bit in n.
For example, if n is 12 (binary 1100), then n - 1 is 11 (binary 1011). The bitwise AND of 1100 and 1011 results in 1000, which clears the lowest set bit.
Count: Each time you perform the operation, you decrease the number of set bits by one. Count the number of times you perform this operation to get the total number of set bits.
